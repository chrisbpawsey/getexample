#!/bin/bash --login 
#BSUB -J GE-gromacs_ex1
#BSUB -o gromacs-%J.e
#BSUB -e gromacs-%J.e
#BSUB -q paragon
#BSUB -n 1
##BSUB -R "span[ptile=16]"
#BSUB -x 
#BSUB -W 00:10
#######

data_in=1aki.pdb

# Default loaded environment module are loaded in the launcher/README script
#

#  Note: LSF_JOBID is a unique number for every job.
#  These are generic variables
echo $PG

EXEC=gmx_mpi_d
WORKDIR=${PG}/run_gromacs_ex1
SCRATCH=$WORKDIR/$LSB_REMOTEJID

###############################################
# Creates a unique directory in the SCRATCH directory for this job to run in.
if [ ! -d $SCRATCH ]; then 
    mkdir -p $SCRATCH 
fi 
echo SCRATCH is $SCRATCH

###############################################
# Creates a unique directory in your GROUP directory for the results of this job
#if [ ! -d $RESULTS ]; then 
#    mkdir -p $RESULTS 
#fi
#echo the results directory is $RESULTS

################################################
# declare the name of the output file or log file
OUTPUT=ex1_gromacs.log

#############################################
#   Copy input files to $SCRATCH
#   then change directory to $SCRATCH

cp ${PG}/data_exe/${data_in}.gz ${SCRATCH}

cd ${SCRATCH}
ls -al
gunzip ${data_in}.gz

${EXEC} -h >> ${OUTPUT}
grep -v HOH 1aki.pdb > 1AKI_clean.pdb
${EXEC} pdb2gmx -f 1AKI_clean.pdb -o 1AKI_processed.gro -water spce << EOF
15
0
EOF
${EXEC} editconf -f 1AKI_processed.gro -o 1AKI_newbox.gro -c -d 1.0 -bt cubic  > ${OUTPUT}
${EXEC} solvate -cp 1AKI_newbox.gro -cs scp216 -o 1AKI_solv.gro -p topol.top >> ${OUTPUT}

${EXEC} grompp -f ions.mdp -c 1AKI_solv.gro -p topol.top -o ions.tpr >> ${OUTPUT}

${EXEC} -s ions.tpr -o 1AKI_solv_ions.gro -p topol.top -pname NA -nname CL -neutral <<EOF
 13
EOF

${EXEC} -f minim.mdp -c 1AKI_solv_ions.gro -p topol.top -o em.tpr >> ${OUTPUT}

${EXEC} -v -deffnm em >> ${OUTPUT}

${EXEC} -f em.edr -o potential.xvg >> ${OUTPUT}

${EXEC} -f nvt.mdp -c em.gro -r em.gro -p topol.top -o nvt.tpr >> ${OUTPUT}

${EXEC} mdrun -deffnm nvt >> ${OUTPUT}

${EXEC} energy -f nvt.edr >> ${OUTPUT}

${EXEC} grompp -f npt.mdp -c nvt.gro -t nvt.cpt -p topol.top -o npt.tpr >> ${OUTPUT}

${EXEC} mdrun -deffnm npt >> ${OUTPUT}

${EXEC} energy -f npt.edr -o pressure.xvg >> ${OUTPUT}

${EXEC} energy -f npt.edr -o density.xvg >> ${OUTPUT}

${EXEC} grompp -f md.mdp -c npt.gro -t npt.cpt -p topol.top -o md_0_1.tpr >> ${OUTPUT}

${EXEC} mdrun -deffnm md_0_1  >> ${OUTPUT}

if [ $? -ne 0 ]; then
    cd
    OUTPUT2=paragon_gromacs.log
    echo "$EXECUTABLE with jobID $LSB_REMOTEJID Failed" >> ${OUTPUT2}
else
    cd
    OUTPUT2=paragon_gromacs.log
    echo "$EXECUTABLE with jobID $LSB_REMOTEJID Succeeded" >> ${OUTPUT2}
fi


#############################################
# create a unique test file in the Paragon parallel file system  directory
# this will signal the laucher script that the job as finished
# so it it can copy the results back to CDS

touch ${PG}/cpt$LSB_REMOTEJID

echo gromacs_ex1 job finished at  `date`


