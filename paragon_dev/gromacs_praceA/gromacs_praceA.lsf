#!/bin/bash --login 
#BSUB -J GE-gromacs_praceA
#BSUB -o praceA-%J.o
#BSUB -e praceA-%J.e
#BSUB -q paragon
#BSUB -n 128
#BSUB -R "span[ptile=16]"
#BSUB -x 
#BSUB -W 02:00
#######

data_in=ion_channel.tpr

# Default loaded environment module are loaded in the launcher/README script
#

#  Note: LSF_JOBID is a unique number for every job.
#  These are generic variables
echo $PG

EXEC=gmx_mpi_d
WORKDIR=${PG}/run_gromacs_praceA
SCRATCH=$WORKDIR/$LSB_REMOTEJID

###############################################
# Creates a unique directory in the SCRATCH directory for this job to run in.
if [ ! -d $SCRATCH ]; then 
    mkdir -p $SCRATCH 
fi 
echo SCRATCH is $SCRATCH

###############################################
# Creates a unique directory in your GROUP directory for the results of this job
#if [ ! -d $RESULTS ]; then 
#    mkdir -p $RESULTS 
#fi
#echo the results directory is $RESULTS

################################################
# declare the name of the output file or log file
OUTPUT=praceA_gromacs.log

#############################################
#   Copy input files to $SCRATCH
#   then change directory to $SCRATCH

cp ${PG}/data_exe/GROMACS_TestCaseA.tar.gz ${SCRATCH}

cd ${SCRATCH}
tar -xzvf GROMACS_TestCaseA.tar.gz 
ls -al

# set number of threads
OMP_NUM_THREADS=16
export OMP_NUM_THREADS

${EXEC} mdrun -s ${data_in} -maxh 0.50 -resethway -noconfout -nsteps 10000 -g logfile > ${OUTPUT} 

if [ $? -ne 0 ]; then
    cd
    OUTPUT2=paragon_gromacs.log
    echo "$EXEC with jobID $LSB_REMOTEJID Failed" >> ${OUTPUT2}
else
    cd
    OUTPUT2=paragon_gromacs.log
    echo "$EXEC with jobID $LSB_REMOTEJID Succeeded" >> ${OUTPUT2}
fi


#############################################
# create a unique test file in the Paragon parallel file system  directory
# this will signal the laucher script that the job as finished
# so it it can copy the results back to CDS

touch ${PG}/cpt$LSB_REMOTEJID

echo gromacs_praceA job finished at  `date`


