#!/bin/bash --login
#BSUB -J GE-fortranHybrid_gnu
#BSUB -q paragon
#BSUB -n 32
#BSUB -W 00:10
#BSUB -x
#BSUB -R "span[ptile=32]"
#BSUB -a "p8aff(1,2,1,balance)"
#BSUB -e gnu-ompHello-%J.e
#BSUB -o gnu-ompHello-%J.o

# To compile with GNU compiler, load the gcc module
module load use.paragon 
module load gcc6/6.4.0 openmpi/3.1.0

# leave in, it lists the environment loaded by the modules
module list

#  Note:  is a unique number for every job.
#  These are generic variables
EXECUTABLE=hello_hybrid_gnu
SCRATCH=$PG/run_fortranHybrid_gnu/$LSF_REMOTEJID
###############################################
# Creates a unique directory in the SCRATCH directory for this job to run in.
if [ ! -d $SCRATCH ]; then 
    mkdir -p $SCRATCH 
fi 
echo SCRATCH is $SCRATCH

###############################################
# declare the name of the output file or log file
OUTPUT=fortranHybrid_gnu.log

#############################################
#   Copy input files to $SCRATCH
#   then change directory to $SCRATCH

mv $PG/data_exe/$EXECUTABLE $SCRATCH

cd $SCRATCH

export OMP_NUM_THREADS=16
ppc64_cpu --info
#mpirun -mca btl_openib_warn_default_gid_prefix 0 -report-bindings --map-by ppr:16:node -np 2 ./$EXECUTABLE >> ${OUTPUT}
mpirun -mca btl_openib_warn_default_gid_prefix 0 -report-bindings -np 4 ./$EXECUTABLE >> ${OUTPUT}

##############################################
# create a unique test file in the PG directory
# this will signal the laucher script that the job as finished
# so it it can copy the results back to CDS

touch ${PG}/cpt$LSB_REMOTEJID

echo fortranHybrid_gnu job finished at  `date`
